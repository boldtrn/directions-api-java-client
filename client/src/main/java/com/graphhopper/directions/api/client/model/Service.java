/*
 * GraphHopper Directions API
 * You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.graphhopper.directions.api.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.graphhopper.directions.api.client.model.Address;
import com.graphhopper.directions.api.client.model.TimeWindow;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Service
 */

public class Service {
  @SerializedName("id")
  private String id = null;

  /**
   * type of service
   */
  public enum TypeEnum {
    @SerializedName("service")
    SERVICE("service"),
    
    @SerializedName("pickup")
    PICKUP("pickup"),
    
    @SerializedName("delivery")
    DELIVERY("delivery");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("preparation_time")
  private Long preparationTime = null;

  @SerializedName("time_windows")
  private List<TimeWindow> timeWindows = new ArrayList<TimeWindow>();

  @SerializedName("size")
  private List<Integer> size = new ArrayList<Integer>();

  @SerializedName("required_skills")
  private List<String> requiredSkills = new ArrayList<String>();

  @SerializedName("allowed_vehicles")
  private List<String> allowedVehicles = new ArrayList<String>();

  public Service id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of service
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Unique identifier of service")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Service type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * type of service
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "type of service")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Service priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * priority of service
   * @return priority
  **/
  @ApiModelProperty(example = "null", value = "priority of service")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Service name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of service
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "name of service")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Service address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(example = "null", value = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Service duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * duration of service, i.e. time in ms the corresponding activity takes
   * @return duration
  **/
  @ApiModelProperty(example = "null", value = "duration of service, i.e. time in ms the corresponding activity takes")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public Service preparationTime(Long preparationTime) {
    this.preparationTime = preparationTime;
    return this;
  }

   /**
   * preparation time of service, e.g. search for a parking space. it only falls due if the location of previous activity differs from this location
   * @return preparationTime
  **/
  @ApiModelProperty(example = "null", value = "preparation time of service, e.g. search for a parking space. it only falls due if the location of previous activity differs from this location")
  public Long getPreparationTime() {
    return preparationTime;
  }

  public void setPreparationTime(Long preparationTime) {
    this.preparationTime = preparationTime;
  }

  public Service timeWindows(List<TimeWindow> timeWindows) {
    this.timeWindows = timeWindows;
    return this;
  }

  public Service addTimeWindowsItem(TimeWindow timeWindowsItem) {
    this.timeWindows.add(timeWindowsItem);
    return this;
  }

   /**
   * array of time windows. currently, only a single time window is allowed
   * @return timeWindows
  **/
  @ApiModelProperty(example = "null", value = "array of time windows. currently, only a single time window is allowed")
  public List<TimeWindow> getTimeWindows() {
    return timeWindows;
  }

  public void setTimeWindows(List<TimeWindow> timeWindows) {
    this.timeWindows = timeWindows;
  }

  public Service size(List<Integer> size) {
    this.size = size;
    return this;
  }

  public Service addSizeItem(Integer sizeItem) {
    this.size.add(sizeItem);
    return this;
  }

   /**
   * array of capacity dimensions
   * @return size
  **/
  @ApiModelProperty(example = "null", value = "array of capacity dimensions")
  public List<Integer> getSize() {
    return size;
  }

  public void setSize(List<Integer> size) {
    this.size = size;
  }

  public Service requiredSkills(List<String> requiredSkills) {
    this.requiredSkills = requiredSkills;
    return this;
  }

  public Service addRequiredSkillsItem(String requiredSkillsItem) {
    this.requiredSkills.add(requiredSkillsItem);
    return this;
  }

   /**
   * array of required skills
   * @return requiredSkills
  **/
  @ApiModelProperty(example = "null", value = "array of required skills")
  public List<String> getRequiredSkills() {
    return requiredSkills;
  }

  public void setRequiredSkills(List<String> requiredSkills) {
    this.requiredSkills = requiredSkills;
  }

  public Service allowedVehicles(List<String> allowedVehicles) {
    this.allowedVehicles = allowedVehicles;
    return this;
  }

  public Service addAllowedVehiclesItem(String allowedVehiclesItem) {
    this.allowedVehicles.add(allowedVehiclesItem);
    return this;
  }

   /**
   * array of allowed vehicle ids
   * @return allowedVehicles
  **/
  @ApiModelProperty(example = "null", value = "array of allowed vehicle ids")
  public List<String> getAllowedVehicles() {
    return allowedVehicles;
  }

  public void setAllowedVehicles(List<String> allowedVehicles) {
    this.allowedVehicles = allowedVehicles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Service service = (Service) o;
    return Objects.equals(this.id, service.id) &&
        Objects.equals(this.type, service.type) &&
        Objects.equals(this.priority, service.priority) &&
        Objects.equals(this.name, service.name) &&
        Objects.equals(this.address, service.address) &&
        Objects.equals(this.duration, service.duration) &&
        Objects.equals(this.preparationTime, service.preparationTime) &&
        Objects.equals(this.timeWindows, service.timeWindows) &&
        Objects.equals(this.size, service.size) &&
        Objects.equals(this.requiredSkills, service.requiredSkills) &&
        Objects.equals(this.allowedVehicles, service.allowedVehicles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, priority, name, address, duration, preparationTime, timeWindows, size, requiredSkills, allowedVehicles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Service {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    preparationTime: ").append(toIndentedString(preparationTime)).append("\n");
    sb.append("    timeWindows: ").append(toIndentedString(timeWindows)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    requiredSkills: ").append(toIndentedString(requiredSkills)).append("\n");
    sb.append("    allowedVehicles: ").append(toIndentedString(allowedVehicles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

